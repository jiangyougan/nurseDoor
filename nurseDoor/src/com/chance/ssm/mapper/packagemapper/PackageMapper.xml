<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chance.ssm.mapper.packagemapper.PackageMapper" >
  <resultMap id="BaseResultMap" type="com.chance.ssm.po.Package" >
    <result column="package_id" property="packageId" jdbcType="CHAR" />
    <result column="package_manursing_content" property="packageManursingContent" jdbcType="CHAR" />
    <result column="package1_name" property="package1Name" jdbcType="VARCHAR" />
    <result column="package1_cost" property="package1Cost" jdbcType="DECIMAL" />
    <result column="package_createtime" property="packageCreatetime" jdbcType="TIMESTAMP" />
    <result column="package_updatime" property="packageUpdatime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.chance.ssm.po.Package" extends="BaseResultMap" >
    <result column="package1_describe" property="package1Describe" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    package_id, package_manursing_content, package1_name, package1_cost, package_createtime, 
    package_updatime
  </sql>
  <sql id="Blob_Column_List" >
    package1_describe
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.chance.ssm.po.PackageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from package
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chance.ssm.po.PackageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from package
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.chance.ssm.po.PackageExample" >
    delete from package
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chance.ssm.po.Package" >
    insert into package (package_id, package_manursing_content, package1_name, 
      package1_cost, package_createtime, package_updatime, 
      package1_describe)
    values (#{packageId,jdbcType=CHAR}, #{packageManursingContent,jdbcType=CHAR}, #{package1Name,jdbcType=VARCHAR}, 
      #{package1Cost,jdbcType=DECIMAL}, #{packageCreatetime,jdbcType=TIMESTAMP}, #{packageUpdatime,jdbcType=TIMESTAMP}, 
      #{package1Describe,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chance.ssm.po.Package" >
    insert into package
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="packageId != null" >
        package_id,
      </if>
      <if test="packageManursingContent != null" >
        package_manursing_content,
      </if>
      <if test="package1Name != null" >
        package1_name,
      </if>
      <if test="package1Cost != null" >
        package1_cost,
      </if>
      <if test="packageCreatetime != null" >
        package_createtime,
      </if>
      <if test="packageUpdatime != null" >
        package_updatime,
      </if>
      <if test="package1Describe != null" >
        package1_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="packageId != null" >
        #{packageId,jdbcType=CHAR},
      </if>
      <if test="packageManursingContent != null" >
        #{packageManursingContent,jdbcType=CHAR},
      </if>
      <if test="package1Name != null" >
        #{package1Name,jdbcType=VARCHAR},
      </if>
      <if test="package1Cost != null" >
        #{package1Cost,jdbcType=DECIMAL},
      </if>
      <if test="packageCreatetime != null" >
        #{packageCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="packageUpdatime != null" >
        #{packageUpdatime,jdbcType=TIMESTAMP},
      </if>
      <if test="package1Describe != null" >
        #{package1Describe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chance.ssm.po.PackageExample" resultType="java.lang.Integer" >
    select count(*) from package
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update package
    <set >
      <if test="record.packageId != null" >
        package_id = #{record.packageId,jdbcType=CHAR},
      </if>
      <if test="record.packageManursingContent != null" >
        package_manursing_content = #{record.packageManursingContent,jdbcType=CHAR},
      </if>
      <if test="record.package1Name != null" >
        package1_name = #{record.package1Name,jdbcType=VARCHAR},
      </if>
      <if test="record.package1Cost != null" >
        package1_cost = #{record.package1Cost,jdbcType=DECIMAL},
      </if>
      <if test="record.packageCreatetime != null" >
        package_createtime = #{record.packageCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.packageUpdatime != null" >
        package_updatime = #{record.packageUpdatime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.package1Describe != null" >
        package1_describe = #{record.package1Describe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update package
    set package_id = #{record.packageId,jdbcType=CHAR},
      package_manursing_content = #{record.packageManursingContent,jdbcType=CHAR},
      package1_name = #{record.package1Name,jdbcType=VARCHAR},
      package1_cost = #{record.package1Cost,jdbcType=DECIMAL},
      package_createtime = #{record.packageCreatetime,jdbcType=TIMESTAMP},
      package_updatime = #{record.packageUpdatime,jdbcType=TIMESTAMP},
      package1_describe = #{record.package1Describe,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update package
    set package_id = #{record.packageId,jdbcType=CHAR},
      package_manursing_content = #{record.packageManursingContent,jdbcType=CHAR},
      package1_name = #{record.package1Name,jdbcType=VARCHAR},
      package1_cost = #{record.package1Cost,jdbcType=DECIMAL},
      package_createtime = #{record.packageCreatetime,jdbcType=TIMESTAMP},
      package_updatime = #{record.packageUpdatime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!-- 根据二级ID查询套餐 -->
  <select id="selectPackageByContentId" resultMap="BaseResultMap" parameterType="java.lang.String">
  SELECT * FROM package WHERE package_manursing_content = #{packageManursingContent,jdbcType=CHAR}
  </select>
</mapper>
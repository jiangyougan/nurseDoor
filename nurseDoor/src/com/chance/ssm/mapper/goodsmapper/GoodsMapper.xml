<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chance.ssm.mapper.goodsmapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.chance.ssm.po.Goods" >
    <id column="goods_id" property="goodsId" jdbcType="CHAR" />
    <result column="goods_content" property="goodsContent" jdbcType="CHAR" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_money" property="goodsMoney" jdbcType="DECIMAL" />
    <result column="goods_isdefault" property="goodsIsdefault" jdbcType="INTEGER" />
    <result column="goods_nurseid" property="goodsNurseid" jdbcType="CHAR" />
    <result column="goods_note" property="goodsNote" jdbcType="CHAR" />
    <result column="goods_createadmin" property="goodsCreateadmin" jdbcType="CHAR" />
    <result column="goods_createtime" property="goodsCreatetime" jdbcType="TIMESTAMP" />
    <result column="goods_updatime" property="goodsUpdatime" jdbcType="TIMESTAMP" />
    <result column="goods_order" property="goodsOrder" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.chance.ssm.po.vo.GoodsVO" id="BaseResultMap2" extends="BaseResultMap">
  	<result column="service_name" property="serviceName" jdbcType="VARCHAR"/>
  	<result column="content_imgurl" property="contentImgurl" jdbcType="VARCHAR"/>
  	<result column="content_note" property="contentNote" jdbcType="VARCHAR"/>
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goods_id, goods_content, goods_name, goods_money, goods_isdefault, goods_nurseid, 
    goods_note, goods_createadmin, goods_createtime, goods_updatime, goods_order
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chance.ssm.po.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where goods_id = #{goodsId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from goods
    where goods_id = #{goodsId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.chance.ssm.po.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chance.ssm.po.Goods" >
    insert into goods (goods_id, goods_content, goods_name, 
      goods_money, goods_isdefault, goods_nurseid, 
      goods_note, goods_createadmin, goods_createtime, 
      goods_updatime, goods_order)
    values (#{goodsId,jdbcType=CHAR}, #{goodsContent,jdbcType=CHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsMoney,jdbcType=DECIMAL}, #{goodsIsdefault,jdbcType=INTEGER}, #{goodsNurseid,jdbcType=CHAR}, 
      #{goodsNote,jdbcType=CHAR}, #{goodsCreateadmin,jdbcType=CHAR}, #{goodsCreatetime,jdbcType=TIMESTAMP}, 
      #{goodsUpdatime,jdbcType=TIMESTAMP}, #{goodsOrder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.chance.ssm.po.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsContent != null" >
        goods_content,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsMoney != null" >
        goods_money,
      </if>
      <if test="goodsIsdefault != null" >
        goods_isdefault,
      </if>
      <if test="goodsNurseid != null" >
        goods_nurseid,
      </if>
      <if test="goodsNote != null" >
        goods_note,
      </if>
      <if test="goodsCreateadmin != null" >
        goods_createadmin,
      </if>
      <if test="goodsCreatetime != null" >
        goods_createtime,
      </if>
      <if test="goodsUpdatime != null" >
        goods_updatime,
      </if>
      <if test="goodsOrder != null" >
        goods_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=CHAR},
      </if>
      <if test="goodsContent != null" >
        #{goodsContent,jdbcType=CHAR},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsMoney != null" >
        #{goodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="goodsIsdefault != null" >
        #{goodsIsdefault,jdbcType=INTEGER},
      </if>
      <if test="goodsNurseid != null" >
        #{goodsNurseid,jdbcType=CHAR},
      </if>
      <if test="goodsNote != null" >
        #{goodsNote,jdbcType=CHAR},
      </if>
      <if test="goodsCreateadmin != null" >
        #{goodsCreateadmin,jdbcType=CHAR},
      </if>
      <if test="goodsCreatetime != null" >
        #{goodsCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsUpdatime != null" >
        #{goodsUpdatime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsOrder != null" >
        #{goodsOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chance.ssm.po.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=CHAR},
      </if>
      <if test="record.goodsContent != null" >
        goods_content = #{record.goodsContent,jdbcType=CHAR},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsMoney != null" >
        goods_money = #{record.goodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsIsdefault != null" >
        goods_isdefault = #{record.goodsIsdefault,jdbcType=INTEGER},
      </if>
      <if test="record.goodsNurseid != null" >
        goods_nurseid = #{record.goodsNurseid,jdbcType=CHAR},
      </if>
      <if test="record.goodsNote != null" >
        goods_note = #{record.goodsNote,jdbcType=CHAR},
      </if>
      <if test="record.goodsCreateadmin != null" >
        goods_createadmin = #{record.goodsCreateadmin,jdbcType=CHAR},
      </if>
      <if test="record.goodsCreatetime != null" >
        goods_createtime = #{record.goodsCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsUpdatime != null" >
        goods_updatime = #{record.goodsUpdatime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsOrder != null" >
        goods_order = #{record.goodsOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set goods_id = #{record.goodsId,jdbcType=CHAR},
      goods_content = #{record.goodsContent,jdbcType=CHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_money = #{record.goodsMoney,jdbcType=DECIMAL},
      goods_isdefault = #{record.goodsIsdefault,jdbcType=INTEGER},
      goods_nurseid = #{record.goodsNurseid,jdbcType=CHAR},
      goods_note = #{record.goodsNote,jdbcType=CHAR},
      goods_createadmin = #{record.goodsCreateadmin,jdbcType=CHAR},
      goods_createtime = #{record.goodsCreatetime,jdbcType=TIMESTAMP},
      goods_updatime = #{record.goodsUpdatime,jdbcType=TIMESTAMP},
      goods_order = #{record.goodsOrder,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chance.ssm.po.Goods" >
    update goods
    <set >
      <if test="goodsContent != null" >
        goods_content = #{goodsContent,jdbcType=CHAR},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsMoney != null" >
        goods_money = #{goodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="goodsIsdefault != null" >
        goods_isdefault = #{goodsIsdefault,jdbcType=INTEGER},
      </if>
      <if test="goodsNurseid != null" >
        goods_nurseid = #{goodsNurseid,jdbcType=CHAR},
      </if>
      <if test="goodsNote != null" >
        goods_note = #{goodsNote,jdbcType=CHAR},
      </if>
      <if test="goodsCreateadmin != null" >
        goods_createadmin = #{goodsCreateadmin,jdbcType=CHAR},
      </if>
      <if test="goodsCreatetime != null" >
        goods_createtime = #{goodsCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsUpdatime != null" >
        goods_updatime = #{goodsUpdatime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsOrder != null" >
        goods_order = #{goodsOrder,jdbcType=INTEGER},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chance.ssm.po.Goods" >
    update goods
    set goods_content = #{goodsContent,jdbcType=CHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_money = #{goodsMoney,jdbcType=DECIMAL},
      goods_isdefault = #{goodsIsdefault,jdbcType=INTEGER},
      goods_nurseid = #{goodsNurseid,jdbcType=CHAR},
      goods_note = #{goodsNote,jdbcType=CHAR},
      goods_createadmin = #{goodsCreateadmin,jdbcType=CHAR},
      goods_createtime = #{goodsCreatetime,jdbcType=TIMESTAMP},
      goods_updatime = #{goodsUpdatime,jdbcType=TIMESTAMP},
      goods_order = #{goodsOrder,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=CHAR}
  </update>
  
  <!-- 根据传入的条件查询数据,返回VO扩展类 -->
    <select id="selectByExampleRuVO" resultMap="BaseResultMap2" parameterType="com.chance.ssm.po.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,manage_nursing_content_name service_name,content_imgurl,content_note
    from goods,manage_nursing_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    and manage_nursing_content_id=goods_content
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <!-- 通过护理服务项id查询收费服务 -->
  <select id="selectGoodInfoByContent" resultMap="BaseResultMap" parameterType="java.lang.String">
  SELECT * FROM goods WHERE goods_content=#{goodsContent,jdbcType=CHAR} order by goods_order asc,goods_updatime desc, goods_createtime desc
  </select>
  
  <!-- 根据二级产品ID得到三级产品信息(默认优先,钱少其次) -->
  <select id="selectGoodsMoneyByOther" resultMap="BaseResultMap" parameterType="java.lang.String">
  	SELECT goods_id,goods_name, goods_money,goods_isdefault FROM goods WHERE goods_content = #{goodsContent,jdbcType=CHAR}
	ORDER BY goods_isdefault ASC,goods_money ASC
  </select>
  
    <!-- 根据二级产品ID查看有没有上架的产品 -->
  <select id="selectGoodsIsCanUse" resultMap="BaseResultMap" parameterType="java.lang.String">
  	SELECT * FROM goods WHERE goods_note = '0' AND goods_content = #{goodsContent,jdbcType=CHAR}
  </select>
</mapper>
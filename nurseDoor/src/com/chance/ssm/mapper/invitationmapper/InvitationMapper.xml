<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chance.ssm.mapper.invitationmapper.InvitationMapper" >
  <resultMap id="BaseResultMap" type="com.chance.ssm.po.Invitation" >
    <result column="invitation_id" property="invitationId" jdbcType="CHAR" />
    <result column="invitation_user_id" property="invitationUserId" jdbcType="CHAR" />
    <result column="invitation_beuser_id" property="invitationBeuserId" jdbcType="CHAR" />
    <result column="invitation_identity" property="invitationIdentity" jdbcType="INTEGER" />
    <result column="invitation_getmark" property="invitationGetmark" jdbcType="INTEGER" />
    <result column="invitation_createtime" property="invitationCreatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    invitation_id, invitation_user_id, invitation_beuser_id, invitation_identity, invitation_getmark, 
    invitation_createtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chance.ssm.po.InvitationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invitation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.chance.ssm.po.InvitationExample" >
    delete from invitation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chance.ssm.po.Invitation" >
    insert into invitation (invitation_id, invitation_user_id, invitation_beuser_id, 
      invitation_identity, invitation_getmark, 
      invitation_createtime)
    values (#{invitationId,jdbcType=CHAR}, #{invitationUserId,jdbcType=CHAR}, #{invitationBeuserId,jdbcType=CHAR}, 
      #{invitationIdentity,jdbcType=INTEGER}, #{invitationGetmark,jdbcType=INTEGER}, 
      #{invitationCreatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chance.ssm.po.Invitation" >
    insert into invitation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="invitationId != null" >
        invitation_id,
      </if>
      <if test="invitationUserId != null" >
        invitation_user_id,
      </if>
      <if test="invitationBeuserId != null" >
        invitation_beuser_id,
      </if>
      <if test="invitationIdentity != null" >
        invitation_identity,
      </if>
      <if test="invitationGetmark != null" >
        invitation_getmark,
      </if>
      <if test="invitationCreatetime != null" >
        invitation_createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="invitationId != null" >
        #{invitationId,jdbcType=CHAR},
      </if>
      <if test="invitationUserId != null" >
        #{invitationUserId,jdbcType=CHAR},
      </if>
      <if test="invitationBeuserId != null" >
        #{invitationBeuserId,jdbcType=CHAR},
      </if>
      <if test="invitationIdentity != null" >
        #{invitationIdentity,jdbcType=INTEGER},
      </if>
      <if test="invitationGetmark != null" >
        #{invitationGetmark,jdbcType=INTEGER},
      </if>
      <if test="invitationCreatetime != null" >
        #{invitationCreatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chance.ssm.po.InvitationExample" resultType="java.lang.Integer" >
    select count(*) from invitation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update invitation
    <set >
      <if test="record.invitationId != null" >
        invitation_id = #{record.invitationId,jdbcType=CHAR},
      </if>
      <if test="record.invitationUserId != null" >
        invitation_user_id = #{record.invitationUserId,jdbcType=CHAR},
      </if>
      <if test="record.invitationBeuserId != null" >
        invitation_beuser_id = #{record.invitationBeuserId,jdbcType=CHAR},
      </if>
      <if test="record.invitationIdentity != null" >
        invitation_identity = #{record.invitationIdentity,jdbcType=INTEGER},
      </if>
      <if test="record.invitationGetmark != null" >
        invitation_getmark = #{record.invitationGetmark,jdbcType=INTEGER},
      </if>
      <if test="record.invitationCreatetime != null" >
        invitation_createtime = #{record.invitationCreatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update invitation
    set invitation_id = #{record.invitationId,jdbcType=CHAR},
      invitation_user_id = #{record.invitationUserId,jdbcType=CHAR},
      invitation_beuser_id = #{record.invitationBeuserId,jdbcType=CHAR},
      invitation_identity = #{record.invitationIdentity,jdbcType=INTEGER},
      invitation_getmark = #{record.invitationGetmark,jdbcType=INTEGER},
      invitation_createtime = #{record.invitationCreatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!-- 查询邀请我的人 -->
  <select id="selectinvitationMe" resultMap="BaseResultMap" parameterType="java.lang.String">
  SELECT * FROM invitation WHERE invitation_beuser_id = #{invitationBeuserId,jdbcType=CHAR} ORDER BY invitation_createtime DESC LIMIT 0,1
  </select>
</mapper>
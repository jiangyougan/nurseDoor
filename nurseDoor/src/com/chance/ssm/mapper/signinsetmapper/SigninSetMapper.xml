<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chance.ssm.mapper.signinsetmapper.SigninSetMapper" >
<resultMap id="BaseResultMap" type="com.chance.ssm.po.SigninSet" >
    <result column="nurse_signin_integral" property="nurseSigninIntegral" jdbcType="INTEGER" />
    <result column="user_signin_integral" property="userSigninIntegral" jdbcType="INTEGER" />
    <result column="nurse_register_integeral" property="nurseRegisterIntegeral" jdbcType="INTEGER" />
    <result column="user_register_integeral" property="userRegisterIntegeral" jdbcType="INTEGER" />
    <result column="user_finish_order_integeral" property="userFinishOrderIntegeral" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    nurse_signin_integral, user_signin_integral, nurse_register_integeral, user_register_integeral, 
    user_finish_order_integeral
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chance.ssm.po.SigninSetExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from signin_set
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.chance.ssm.po.SigninSetExample" >
    delete from signin_set
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chance.ssm.po.SigninSet" >
    insert into signin_set (nurse_signin_integral, user_signin_integral, 
      nurse_register_integeral, user_register_integeral, 
      user_finish_order_integeral)
    values (#{nurseSigninIntegral,jdbcType=INTEGER}, #{userSigninIntegral,jdbcType=INTEGER}, 
      #{nurseRegisterIntegeral,jdbcType=INTEGER}, #{userRegisterIntegeral,jdbcType=INTEGER}, 
      #{userFinishOrderIntegeral,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.chance.ssm.po.SigninSet" >
    insert into signin_set
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nurseSigninIntegral != null" >
        nurse_signin_integral,
      </if>
      <if test="userSigninIntegral != null" >
        user_signin_integral,
      </if>
      <if test="nurseRegisterIntegeral != null" >
        nurse_register_integeral,
      </if>
      <if test="userRegisterIntegeral != null" >
        user_register_integeral,
      </if>
      <if test="userFinishOrderIntegeral != null" >
        user_finish_order_integeral,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nurseSigninIntegral != null" >
        #{nurseSigninIntegral,jdbcType=INTEGER},
      </if>
      <if test="userSigninIntegral != null" >
        #{userSigninIntegral,jdbcType=INTEGER},
      </if>
      <if test="nurseRegisterIntegeral != null" >
        #{nurseRegisterIntegeral,jdbcType=INTEGER},
      </if>
      <if test="userRegisterIntegeral != null" >
        #{userRegisterIntegeral,jdbcType=INTEGER},
      </if>
      <if test="userFinishOrderIntegeral != null" >
        #{userFinishOrderIntegeral,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chance.ssm.po.SigninSetExample" resultType="java.lang.Integer" >
    select count(*) from signin_set
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update signin_set
    <set >
      <if test="record.nurseSigninIntegral != null" >
        nurse_signin_integral = #{record.nurseSigninIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.userSigninIntegral != null" >
        user_signin_integral = #{record.userSigninIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.nurseRegisterIntegeral != null" >
        nurse_register_integeral = #{record.nurseRegisterIntegeral,jdbcType=INTEGER},
      </if>
      <if test="record.userRegisterIntegeral != null" >
        user_register_integeral = #{record.userRegisterIntegeral,jdbcType=INTEGER},
      </if>
      <if test="record.userFinishOrderIntegeral != null" >
        user_finish_order_integeral = #{record.userFinishOrderIntegeral,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update signin_set
    set nurse_signin_integral = #{record.nurseSigninIntegral,jdbcType=INTEGER},
      user_signin_integral = #{record.userSigninIntegral,jdbcType=INTEGER},
      nurse_register_integeral = #{record.nurseRegisterIntegeral,jdbcType=INTEGER},
      user_register_integeral = #{record.userRegisterIntegeral,jdbcType=INTEGER},
      user_finish_order_integeral = #{record.userFinishOrderIntegeral,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
   <!-- 护士注册赠送的积分 -->   
   <select id="selectNurseRegistermark" resultMap="BaseResultMap">   
   SELECT nurse_register_integeral FROM signin_set   
   </select>   
   <!-- 用户注册赠送的积分 -->   
   <select id="selectUserRegistermark" resultMap="BaseResultMap">   
   SELECT user_register_integeral FROM signin_set   
   </select>
   <!-- 查询后台设定的积分 -->
   <select id="selectMarkSetSignin" resultMap="BaseResultMap">
   SELECT * FROM signin_set
   </select>
</mapper>